# -*- coding: utf-8 -*-
"""film_data .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hr2gannAhl1o0RH7YEjI_LnntBH-2qFo
"""

#import library
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

#uploding dataset
data=pd.read_csv('/content/IMDB-Movie-Data.csv')

data

#obtenir des informations sur dataset
data.info()

#vérifier les valeurs manquantes
data.isnull().sum()

#supprimez toutes les valeurs manquantes
data.dropna(axis=0)

#afficher le titre du film ayant une durée d'exécution >=180 minutes
display(data.columns)
print('-------------------')
display(data[data['Runtime (Minutes)'] >= 180]['Title'])

#En quelle année y a-t-il eu la moyenne de vote la plus élevée ?
data.groupby('Year')['Votes'].mean().sort_values()

#vusialiser
sns.barplot(x='Year',y='Votes',data=data)
plt.title("votes by Year")
plt.show()

#au cours de quelle année le revenu moyen a été le plus élevé
print(data.columns)
print('---------------')
data.groupby('Year')['Revenue (Millions)'].mean()

#Afficher le titre et la durée d'exécution des 10 meilleurs films longs
top_10=data.nlargest(10,'Runtime (Minutes)')[['Title','Runtime (Minutes)']].set_index('Title')
top_10

sns.barplot(x='Runtime (Minutes)',y=top_10.index,data=top_10)

#Afficher le nombre de films par an
sns.countplot(x='Year',data=data)
plt.title("number of movie per year")
plt.show()

# Trouver le titre du film le plus populaire (revenu le plus élevé)
data[data['Revenue (Millions)'].max()==data['Revenue (Millions)']]['Title']

#Afficher les 10 titres de films les mieux notés et leurs réalisateurs
top_10_R=data.nlargest(10,'Rating')[['Title','Rating','Director']].set_index('Title')
top_10_R

sns.barplot(x='Rating',y=top_10_R.index , data=top_10_R, hue='Director',
            dodge=False)
plt.legend(bbox_to_anchor=(1.05,1),loc=2)

#Afficher les 10 titres de films les plus rentables
data.nlargest(10,'Revenue (Millions)')['Title']

top=data.nlargest(10,'Revenue (Millions)')[['Title','Revenue (Millions)']].set_index('Title')
top

sns.barplot(x='Revenue (Millions)',y=top.index, data=top)
plt.title('top 10 highest revenue movie title')
plt.show()

#La notation affecte-t-elle les revenus ?
sns.scatterplot(x='Rating',y='Revenue (Millions)',data= data)

#Classer les films en fonction des notes [Excellent, Good et Average]
def rating(rating):
  if rating>=7.0:
    return "Excellent"
  if rating>=6.0:
    return "Good"
  else:
    return "Average"

data['Rating_classify']=data['Rating'].apply(rating)
data.head()

#Compter le nombre de films d'action
len(data[data['Genre'].str.contains('Action',case=False)])

#Trouvez des valeurs uniques dans le genre
data['Genre']

list1=[]
for value in data['Genre']:
 list1.append(value.split(','))
print(list1)

list2=[]
for item in list1:
  for item1 in item:
    list2.append(item1)
print(list2)

unique_list=[]
for item in list2:
  if item not in unique_list:
    unique_list.append(item)

unique_list